# -*- coding: utf-8 -*-
"""Visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RU6bCXogUlYZ-DYilAktzUOUCNKYgwhP

# Visualization Examples

"""

"""
Line Chart (선형차트)
"""
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Series
ts = pd.Series(np.random.randn(1000), index=pd.date_range('1/1/2000', periods=1000))
ts = ts.cumsum()    # cumulative sum of a DataFrame or Series
ts.plot()
plt.show()

# DataFrame
df = pd.DataFrame(np.random.randn(1000, 4), index=pd.date_range('1/1/2000', periods=1000), columns=list('ABCD'))
df = df.cumsum()    # cumulative sum of a DataFrame or Series
df.plot()
plt.show()


"""
Pie Chart (원형 차트)
"""
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Series
series = pd.Series(3 * np.random.rand(4), index=['A', 'B', 'C', 'D'], name='Market Share')
series.plot.pie()
print(series)
plt.show()

# DataFrame with 1 column
df = pd.DataFrame(3 * np.random.rand(4, 1), index=['A', 'B', 'C', 'D'], columns=['Market Share'])
print(df)
df.plot.pie(subplots=True)
plt.show()

# DataFrame with 2 columns
df = pd.DataFrame(3 * np.random.rand(4, 2), index=['A', 'B', 'C', 'D'], columns=['Market Share', 'Margin Ratio'])
print(df)
df.plot.pie(subplots=True, figsize=(8, 4))
plt.show()


"""
Bar Chart (막대 그래프)
"""
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Series
series = pd.Series(np.random.rand(4), index=['A', 'B', 'C', 'D'], name='Market Share')
series.plot.bar()
plt.show()

# Data Frame
df = pd.DataFrame(np.random.rand(5, 4), columns=['A', 'B', 'C', 'D'])
df.plot.bar()   # Vertical
plt.show()

df.plot.barh()  # Horizontal
plt.show()

df.plot.bar(stacked=True)   # Cumulative
plt.show()


"""
Histogram (히스토그램)
"""
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('iris.csv')
df.plot.hist(alpha=0.5)
plt.show()

df.plot.hist(subplots=True, layout=(2, 2), alpha=0.5, figsize=(8, 4))
plt.show()

df.plot.hist(subplots=True, layout=(2, 2), alpha=0.5, bins=50, figsize=(8, 4))
plt.show()


"""
Representation Values (대푯값)
"""
import pandas as pd

# Even number of data
even_data = pd.Series([3, 6, 7, 8, 8, 10, 13, 15, 16, 20])
print('Number of data is EVEN')
print('mean is {}'.format(even_data.mean()))
print('variance is {}'.format(even_data.var()))
print('median is {}'.format(even_data.median()))
print('1st quantile is {}'.format(even_data.quantile(0.25, interpolation='nearest')))
print('2nd quantile is {}'.format(even_data.quantile(0.5, interpolation='nearest')))
print('3rd quantile is {}'.format(even_data.quantile(0.75, interpolation='nearest')))

# Odd number of data
print('Number of data is ODD')
odd_data = pd.Series([3, 6, 7, 8, 8, 9, 10, 13, 15, 16, 20])
print('mean is {}'.format(odd_data.mean()))
print('variance is {}'.format(odd_data.var()))
print('median is {}'.format(odd_data.median()))
print('1st quantile is {}'.format(odd_data.quantile(0.25, interpolation='nearest')))
print('2nd quantile is {}'.format(odd_data.quantile(0.5, interpolation='nearest')))
print('3rd quantile is {}'.format(odd_data.quantile(0.75, interpolation='nearest')))


"""
Box Plot (상자 그림)
"""
import pandas as pd
import matplotlib.pyplot as plt

# for Sepal-length only
df.plot.box()
plt.show()

# for Sepal-length only
df.boxplot(column=['sepal-length'], by='class')
plt.show()

# All features
df.boxplot(by='class')
plt.show()


"""
Violin Plot (바이올린 플롯)
"""
import pandas as pd
import seaborn as sns; sns.set(style='whitegrid')
import matplotlib.pyplot as plt

# Iris
df = pd.read_csv('iris.csv')
sns.violinplot(data=df, x='class', y='sepal-length')
plt.title('Violin Plot of Iris Dataset')
plt.show()

# Tips dataset
# https://github.com/mwaskom/seaborn-data/blob/master/tips.csv
tips = sns.load_dataset('tips')
sns.violinplot(x='day', y='tip', hue='sex',
               data=tips, split=True)
plt.show()


"""
Scatter Plot (산점도)
"""
# Import Library
import pandas as pd
import matplotlib.pyplot as plt

# Load Data as Pandas.DataFrame
df = pd.read_csv('iris.csv')

# Plot sepal-length vs. sepal-width
df.plot.scatter(x='sepal-width', y='sepal-length')
plt.show()

# specify color and marker by class
colors = ['r', 'g', 'b']
markers = ['.', '*', '^']
fig, ax = plt.subplots(1, 1)
for i, species in enumerate(df['class'].unique()):
    ddf =df[df['class']==species]
    ddf.plot.scatter(x='sepal-width', y='sepal-length',
        alpha=0.5, s=10*(i+1), ax=ax,
        color=colors[i], marker=markers[i], label=species)
plt.legend()
plt.show()

## Boston Dataset (Normal vs. Log-scale)
# Boston Dataset
import pandas as pd
from sklearn.datasets import load_boston
import matplotlib.pyplot as plt

bs = load_boston()
df = pd.DataFrame(bs.data, columns=bs.feature_names)
df['PRICE'] = bs.target     # add price
print(df.keys())

# Noral Scatter Plot
df.plot.scatter(x='CRIM', y='PRICE')
plt.title('Scatter plot of Price vs. Crime')
plt.show()

# Log-X
df.plot.scatter(x='CRIM', y='PRICE', logx=True)
plt.title('Scatter plot of Price vs. log(Crime)')
plt.show()


"""
Scatter Plot Matrix (산점도 행렬)
"""
# Import LIbrary
import pandas as pd
from pandas.plotting import scatter_matrix
import matplotlib.pyplot as plt

df = pd.read_csv('iris.csv')

# Scatter Plot Matrix with Histogram
scatter_matrix(df, alpha=0.5)
plt.show()

# Scatter Plot Matrix with Kernel Density Estimation
scatter_matrix(df, alpha=0.5, diagonal='kde')
plt.show()


"""
Heatmap (히트맵)
"""
## Using Pandas hexbin
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('iris.csv')
df.plot.hexbin(x='sepal-length', y='sepal-width', gridsize=25)
plt.show()

## Using Seaborn heatmap
import seaborn as sns; sns.set()
import matplotlib.pyplot as plt

flights = sns.load_dataset("flights")
flights = flights.pivot('month', 'year', 'passengers')
sns.heatmap(flights, annot=True, fmt='d', linewidths=.5)
plt.show()